[project]
name = "post-processing"
version = "0.2.0"
description = "This repository is used to process passive acoustic data particularly marine mammals automatic detections and manual annotations according to OSmOSE project format."
authors = [
    {name = "Mathieu Dupont", email = "mathieu.dupont@ensta.fr"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "osekit >= 0.2.5",
    "astral >=3.2",
    "easygui >=0.98.3",
    "matplotlib >=3.10.1",
    "numpy >=1.24.2",
    "pandas >=2.2.3",
    "pypamguard >= 1.0.0",
    "pytz >=2025.1",
    "pyyaml >=6.0.2",
    "scipy >=1.15.2",
    "seaborn >=0.12.2",
    "soundfile >=0.12.1",
    "tqdm >=4.67.1",
    "gpxpy >=1.6.2",
    "notebook>=7.4.5",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "myst-nb>=1.3.0",
    "notebook >=7.4.4",
    "setuptools <66.2",
    "ruff>=0.11.10",
    "sphinx>=8.2.3",
    "sphinx-book-theme>=1.1.4",
    "sphinx-copybutton>=0.5.2",
]

[tool.ruff]
exclude = ["scripts/**/*.py"]

[tool.ruff.lint]
select = ["ALL"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "D", # Docstring-related stuff
    "SLF001", # Access to private variables
    "BLE001", # Blind exceptions
    "PLR0913", # Too many arguments in methods
]
